#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import (absolute_import, division, print_function)

__metaclass__ = type

__requires__ = ['ansible']
try:
    import pkg_resources
except Exception:
    # Use pkg_resources to find the correct versions of libraries and set
    # sys.path appropriately when there are multiversion installs.  But we
    # have code that better expresses the errors in the places where the code
    # is actually used (the deps are optional for many code paths) so we don't
    # want to fail here.
    pass

import sys
import traceback

from ansible.utils.display import Display

if __name__ == '__main__':

    cli = None

    try:
        display = Display()
        display.debug("starting run")
        try:
            mycli = getattr(__import__("itsm_ansible.cli.playbook", fromlist=["PlaybookCLI"]), "PlaybookCLI")
        except ImportError as e:
            raise
        cli = mycli(sys.argv)
        cli.parse()
        sys.exit(cli.run())
    except Exception as e:
        print(traceback.format_exc())
        print(e.message)
        # have_cli_options = cli is not None and cli.options is not None
        # display.error("Unexpected Exception: %s" % to_unicode(e), wrap_text=False)
        # if not have_cli_options or have_cli_options and cli.options.verbosity > 2:
        #     display.display("the full traceback was:\n\n%s" % traceback.format_exc())
        # else:
        #     display.display("to see the full traceback, use -vvv")
        sys.exit(1)
